vampire_feeding = {
	is_shown = {
		#is_landed_or_landless_administrative = yes
		#years_from_game_start >= 3
		is_playable_character = yes
		is_available_adult = yes

			is_at_war = no
		OR = {
			has_trait = demon
			has_trait = supernatural_vampire
			has_trait = supernatural_hybrid
		}
	}
	
	is_grand_activity = no
	
	can_start_showing_failures_only = {
		is_available = yes
		age >= 16

		#custom_description = {
		#	NOT = { has_trait = spn_known_vampire }
		#	text = known_vampire_feed
		#}
		#custom_description = {
		#	NOT = { has_trait = spn_known_hybrid }
		#	text = known_hybrid_feed
		#}
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_alive = yes
			is_imprisoned = no
			is_playable_character = yes
			NOT = { is_incapable = yes }
		}
		
	}
	on_start = {
		#space for invitation event
		every_living_character = {
			limit = {
				NOT = {
					THIS = scope:host
				}
				is_alive = yes
				is_adult = yes
				is_imprisoned = no
				OR = {
					has_trait = demon
					has_trait = supernatural_hybrid
					has_trait = supernatural_vampire
				}
			}
			#trigger_event = supernatural_ev1.01
		}
	}

	on_invalidated = {
		if = { #Host becomes braindead
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	###################
	# COST
	###################

	cost = {
		gold = {
			add = {
				value = standard_camp_party_activity_cost
				desc = hunt_base_cost
			}
			if = {
				limit = {
					OR = {
						has_trait = demon
						has_perk = true_vampire_perk
						has_perk = true_vampire_hybrid_perk
					}
				}
				multiply = {
					value = 0.5
					#desc = magic_tradition_modifier
				}
			}
		}
	}
	
	ui_predicted_cost = {
		gold = {
			# Base Cost
			value = standard_camp_party_activity_cost
			if = {
				limit = {
					OR = {
						has_trait = demon
						has_perk = true_vampire_perk
						has_perk = true_vampire_hybrid_perk
					}
				}
				multiply = 0.5
			}
			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { years = 7 }

	province_filter = domicile_domain
	ai_province_filter = domicile_domain
	wait_time_before_start = { weeks = 2 }
	max_guest_arrival_delay_time = { months = 2 }
	is_single_location = yes

	###################
	# AI VALUES
	###################

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 30
		#demon
		if = {
			limit = {
				has_trait = demon
			}
			add = 20
		}
		
		#Vampires
		if = {
			limit = {
				AND = {
					has_trait = supernatural_vampire
					has_trait_xp = { 
						trait = supernatural_vampire 
						track = vampirism 
						value < 20 
					}
				}
			}
			add = 20
		}
		if = {
			limit = {
				AND = {
					has_trait = supernatural_vampire
					has_trait_xp = { 
						trait = supernatural_vampire 
						track = vampirism 
						value < 40 
					}
				}
			}
			add = 20
		}
		if = {
			limit = {
				has_trait = spn_known_vampire
			}
			add = -30
		}
		#Hybrids
		if = {
			limit = {
				AND = {
					has_trait = supernatural_hybrid
					has_trait_xp = { 
						trait = supernatural_hybrid
						track = hybrid_vampirism 
						value < 20 
					}
				}
			}
			add = 20
		}
		if = {
			limit = {
				AND = {
					has_trait = supernatural_hybrid
					has_trait_xp = { 
						trait = supernatural_hybrid
						track = hybrid_vampirism 
						value < 40 
					}
				}
			}
			add = 20
		}
		if = {
			limit = {
				has_trait = spn_known_hybrid
			}
			add = -30
		}
		

	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 20
	}

	###################
	# OPTIONS
	###################

	options = {
		
		options_preparations = { # How do you prepare for a night of feeding?
			preparations_option_instinct = { #No Increased Success Chance
				default = yes
				#is_shown = { has_dlc_feature = advanced_activities }
				
				cost = {
					gold = 0
				}
				
				ai_will_do = {
					value = 0
					# Financial preference.
					add = activity_option_likes_cheap_expense_value
					# Fanciness preference.
					add = activity_option_likes_functional_food_option_value
				}
			}
			preparations_option_scout = { #Increase Success Chance
				cost = {
					gold = 25
				}

				ai_will_do = {
					value = 0
					# Financial preference.
					add = activity_option_likes_middling_expense_value
					# Fanciness preference.
					## We just use slightly reduced fanciness prefs here.
					add = {
						value = activity_option_likes_ostentatious_food_option_value
						multiply = 0.5
					}
				}
			}
			preparations_option_trap = { #Increase Greater Success Chance
				#is_shown = { has_dlc_feature = advanced_activities }

				cost = {
					gold = {
						add = {
							add = {
								value = 35
								desc = feast_food_good
							}
							add = {
								value = 25
								multiply = activity_cost_scale_by_tier
								subtract = 25
								desc = activity_cost_scale_by_tier_desc
							}
							add = {
								value = 25
								multiply = activity_cost_scale_by_era
								subtract = 25
								desc = activity_cost_scale_by_era_desc
							}
							min = 0
						}
					}
				}

				ai_will_do = {
					value = 0
					# Financial preference.
					add = activity_option_likes_heavy_expense_value
					# Fanciness preference.
					add = activity_option_likes_ostentatious_food_option_value
				}
			}
		}
		options_spoils = {
			spoils_option_dead_respect = { #Gain Piety
				default = yes
				cost = {
					gold = 0
				}
				ai_will_do = {
					value = 0
					# Financial preference.
					add = activity_option_likes_heavy_expense_value
					# Fanciness preference.
					add = activity_option_likes_ostentatious_food_option_value
					if = { # Ambitious
						limit = { has_trait = greedy }
						add = {
							value = 20
							desc = "Greedy"
						}
					}
					if = { # Ambitious
						limit = { has_trait = avaricious }
						add = {
							value = 20
							desc = "Avaricious"
						}
					}
				}
			}
			spoils_option_robbing = { #Gain Gold
				default = yes
				cost = {
					piety = 20
				}
				ai_will_do = {
					value = 0
					# Financial preference.
					add = activity_option_likes_heavy_expense_value
					# Fanciness preference.
					add = activity_option_likes_ostentatious_food_option_value
					if = { # Ambitious
						limit = { has_trait = greedy }
						add = {
							value = 20
							desc = "Greedy"
						}
					}
					if = { # Ambitious
						limit = { has_trait = avaricious }
						add = {
							value = 20
							desc = "Avaricious"
						}
					}
				}
			}
			spoils_option_casing = { #Gain Extra Gold
				cost = {
					gold = 50
				}
				
				ai_will_do = {
					value = 0
					# Financial preference.
					add = activity_option_likes_heavy_expense_value
					# Fanciness preference.
					add = activity_option_likes_ostentatious_food_option_value
					if = { # Ambitious
						limit = { has_trait = greedy }
						add = {
							value = 20
							desc = "Greedy"
						}
					}
					if = { # Ambitious
						limit = { has_trait = avaricious }
						add = {
							value = 20
							desc = "Avaricious"
						}
					}
				}				
			}
			

		}
	}

	###################
	# PHASES
	###################

	phases = {
		searching_phase = {
			is_predefined = yes
			order = 1
			on_phase_active = {
				st_clear_flags_effect = yes
				if = {
					limit = {
						is_ai = yes
					}
					st_load_intents_for_ai_effect = yes
				}
				if = {
					limit = { this = scope:host }
					scope:activity = { progress_activity_phase_after = { weeks = 3 } }
					# Check that there are guests apart from the host.
					if = {
						limit = {
							scope:activity = {
								any_attending_character = {
									count < 1
									NOT = {	this = scope:host }
								}
							}
						}
						# If no other vampires are present.
						trigger_event = supernatural_ev1.02
					}
					else = {
						# If other vampires are present.
						trigger_event = supernatural_ev1.03
						random = {
							chance = 50
							trigger_event = {
								id = snd_ev1.08
								days = 4
							}
						}
					}
				}
				if = {
					limit = {
						scope:activity = {
							any_attending_character = {
								has_character_flag = mikaelson_vampire
							}
						}
					}
					random = {
						chance = 80
						trigger_event = {
							id = supernatural_ev1.06 # Mikaelson Vampire Event
							days = 5
						}
					}
				}
			}

			on_end = {
				if = {
					limit = {
						scope:activity = {
							has_activity_option = { category = options_preparations option = preparations_option_scout }
						}
					}
					trigger_event = {
						id = supernatural_ev1.13
					}
				}
				else_if = {
					limit = {
						scope:activity = {
							has_activity_option = { category = options_preparations option = preparations_option_trap }
						}
					}
					trigger_event = {
						id = supernatural_ev1.14
					}
				}
			}

			on_weekly_pulse = {
				trigger_event = { on_action = snd_feeding_event_selection }
			}
		}

		feeding_phase = {
			is_predefined = yes
			order = 2
			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 5 } }
				}
				trigger_event = {
					id = supernatural_ev1.21
					days = 2 
				}
			}
			on_phase_active = {
				if = {
					limit = { this = scope:host }
					scope:activity = { progress_activity_phase_after = { days = 14 } }
				}
				trigger_event = snd_ev1.22
			}

			on_end = {
				# Run conclusion stuff here
				trigger_event = snd_ev1.23
			}
		}
	}

	###################
	# LOCATION
	###################
	
	is_location_valid = {
		has_holding_type = city_holding
	}

	province_filter = domicile_realm
	ai_province_filter = domicile_realm

	max_province_icons = 3
	allow_zero_guest_invites = yes
	open_invite = no
	
	province_description = {
		desc = activity_camp_party_province_desc
	}
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {
		entries = {
			won_arm_wrestling_bet
			compelled_drunkard
			unholy_communion
			instilled_fear_in_citizen
			rumors_of_vampires
			rumors_of_demons
			expertise_display
			expertise_display_demon
		}
		chance_of_no_event = 25
	}


	###################
	# GUEST HANDLING
	###################

	max_guests = 5

	guest_invite_rules = {
		defaults = {
			1 = activity_invite_rule_vampires
			2 = activity_invite_rule_demons
			3 = activity_invite_rule_supernatural_2_mp
		}
		rules = {
			3 = activity_invite_rule_hybrids
		}
	}

	can_be_activity_guest = {
		is_alive = yes
		is_adult = yes
		is_travelling = no
		is_imprisoned = no
		is_incapable = no
		is_in_army = no
		NOT = {
			exists = involved_activity
		}
		OR = {
			has_trait = demon
			has_trait = supernatural_vampire
			has_trait = supernatural_hybrid

            #OR = {
            #    has_trait = spn_known_vampire
            #    any_secret = { secret_type = secret_vampire }
            #}
		}
	}

	host_intents = {
		intents = { satiate_thirst_intent embrace_the_night_intent strengthen_the_blood_intent }
		default = satiate_thirst_intent
		player_defaults = { strengthen_the_blood_intent }
	}

	guest_intents = {
		intents = { satiate_thirst_intent embrace_the_night_intent strengthen_the_blood_intent }
		default = satiate_thirst_intent
		player_defaults = { strengthen_the_blood_intent }
	}

	guest_join_chance = {
		base = 20
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
		modifier = {
			AND = {
				has_trait = demon
				has_trait_xp = { 
					trait = demon 
					value < 33 
				}
			}
			add = {
				value = 30
			}
			desc = ms_guest_important_event
		}
		modifier = {
			AND = {
				has_trait = supernatural_vampire
				has_trait_xp = { 
					trait = supernatural_vampire 
					track = vampirism 
					value < 33 
				}
			}
			add = {
				value = 30
			}
			desc = ms_guest_important_event
		}
		modifier = {
			AND = {
				has_trait = supernatural_hybrid
				has_trait_xp = { 
					trait = supernatural_hybrid 
					track = hybrid_vampirism 
					value < 33 
				}
			}
			add = {
				value = 30
			}
			desc = ms_guest_important_event
		}
		modifier = {
			AND = {
				has_trait = demon
				has_trait_xp = { 
					trait = demon 
					value < 66 
				}
			}
			add = {
				value = 50
			}
			desc = ms_guest_important_event
		}
		modifier = {
			AND = {
				has_trait = supernatural_vampire
				has_trait_xp = { 
					trait = supernatural_vampire 
					track = vampirism 
					value < 66 
				}
			}
			add = {
				value = 50
			}
			desc = ms_guest_important_event
		}
		modifier = {
			AND = {
				has_trait = supernatural_hybrid
				has_trait_xp = { 
					trait = supernatural_hybrid 
					track = hybrid_vampirism 
					value < 66 
				}
			}
			add = {
				value = 50
			}
			desc = ms_guest_important_event
		}
	}
	
	on_complete = {
		if = {
			limit = { this = scope:host }
			scope:activity = {
				add_activity_log_entry = {
					key = feeding_activity_conclusion
					tags = { completed }
					show_in_conclusion = yes
					character = scope:host

					# Award XP to all attending characters
					every_attending_character = {
						if = {
							limit = {
								has_trait = demon
							}
							add_trait_xp = {
								trait = demon
								value = { 5 15 }  # Customize the range to fit your design
							}
							add_character_modifier = {
								modifier = demon_recently_fed_modifier
								years = 2
							}
						}
						else_if = {
							limit = {
								has_trait = supernatural_vampire
							}
							add_trait_xp = {
								trait = supernatural_vampire
								track = vampirism
								value = { 5 15 }  # Customize the range to fit your design
							}
							add_character_modifier = {
								modifier = vf_recently_fed_modifier
								years = 3
							}
						}
						else = {
							limit = {
								has_trait = supernatural_hybrid 
							}
							add_trait_xp = {
								trait = supernatural_hybrid
								track = hybrid_vampirism
								value = { 5 15 }  # Hybrid XP if applicable
							}
							add_character_modifier = {
								modifier = vf_recently_fed_modifier
								years = 3
							}
						}
					}
				}
			}

			# Optional: Major stress loss for the host
			scope:host = {
				add_stress = medium_stress_loss
			}
		}
	}


	###################
	# GRAPHICS
	###################
	
	map_entity = {
		trigger = {
			activity_location.culture = {
				OR = {
					has_graphical_mena_culture_group_trigger = yes
					has_graphical_steppe_culture_group_trigger = yes
					has_graphical_african_culture_group_trigger = yes
				}
			}
		}
		reference = "building_indian_feast_01_entity"
	}

	map_entity = {
		trigger = {
			activity_location.culture = {
				has_graphical_india_culture_group_trigger = yes
			}
		}
		reference = "building_indian_feast_01_entity"
	}
	
	#map_entity = "building_indian_feast_01_entity"

	# Travel
	background = { # Bridge
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_riverside_province = yes
				#geographical_region = world_europe
				OR = {
					terrain = farmlands
					terrain = plains
					terrain = mountains
					terrain = hills
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_bridge.dds"
		environment = "environment_travel_bridge"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	
	background = { # Farmland, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_farm.dds"
		environment = "environment_travel_farmlands"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { # Farmland, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/farms.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #Desert, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_desert.dds"
		environment = "environment_travel_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = { #Desert, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/desert.dds"
		environment = "environment_event_bp1_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #forest snowy
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location ?= { hunt_snowy_forest_trigger = yes }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_hunt_snowy_forest.dds"
		environment = "environment_hunt_snowy_forest"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day" 
	}

	background = { #forest_pine
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_pine_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest_pine.dds"
		environment = "environment_event_forest_pine"
		ambience = "event:/SFX/Events/Backgrounds/coniferous_forest_day"
	}

	background = { #forest
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest.dds"
		environment = "environment_event_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #mountains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = { #mountains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #steppe, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_steppe.dds"
		environment = "environment_travel_steppe_settlement"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = { #steppe, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}

	background = { #drylands (formerly desert)
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_drylands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/drylands.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #wetlands
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_wetlands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_wetlands.dds"
		environment = "environment_event_bp1_wetlands" 
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #jungle
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_jungle_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_jungle.dds"
		environment = "environment_event_bp1_jungle"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #plains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #plains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_plains.dds"
		environment = "environment_event_bp1_plains"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #hills, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #hills, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_hills.dds"
		environment = "environment_event_bp1_hills"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #sea
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_sea_province = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_ocean.dds"
		environment = "environment_event_fp1_ocean"
		ambience = "event:/DLC/FP1/SFX/Events/event_ocean_longship"
	}

	# End Travel
	
	background = {
		trigger = {
			NOR = {
				has_current_phase = searching_phase
				has_current_phase = feeding_phase
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/tavern.dds"
		environment = "environment_event_bp1_courtyard_mena" 
		ambience = "event:/SFX/Events/Backgrounds/tavern"
	}
	background = {
		trigger = {
			has_current_phase = searching_phase
		}
		texture = "gfx/interface/illustrations/event_scenes/tavern.dds"
		environment = "environment_event_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
		music = "grandfeast_cue"
	}
	background = {
		trigger = {
			has_current_phase = feeding_phase
		}
		texture = "gfx/interface/illustrations/event_scenes/alley.dds"
		environment = "environment_event_fp2_throneroom" 
		ambience = "event:/DLC/FP2/SFX/Events/throneroom"
	}

	window_characters = {

		guest = {
			camera = camera_event_center
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							NOT = { has_trait = craven }
						}
					}
					animation = { drink scheme spymaster ecstasy }
				}
				animation = worry
			}
		}

		guest = {
			camera = camera_event_center
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
							NOT = { has_trait = craven }
						}
					}
					animation = { drink scheme spymaster ecstasy }
				}
				animation = worry
			}
		}
		
		host = {
			camera = camera_event_center
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {	scope:character = { NOT = { has_trait = craven }	} }
					animation = { marshal toast idle steward }
				}
				animation = worry
			}
		}
		
		travel_host = {
			camera = camera_activity_horse
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = { scope:character = { has_trait = impatient } }
					animation = { jockey_gallop }
				}
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_event_center
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
						NOT = { has_trait = craven }
						}
					}
					animation = { drink scheme spymaster ecstasy }
				}
				animation = worry
			}
		}

		guest = {
			camera = camera_event_center
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = {
						NOT = { has_trait = craven }
						}
					}
					animation = { drink scheme spymaster ecstasy }
				}
				animation = worry
			}
		}
	}
}
